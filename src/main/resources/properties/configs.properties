#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
jdbc.filters:stat
#最大连接池数量
jdbc.maxActive = 20
#  初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
jdbc.initialSize = 1
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
jdbc.maxWait = 60000
#最小连接池数量
jdbc.minIdle = 10
#  有两个含义：1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
jdbc.timeBetweenEvictionRunsMillis = 60000
#Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于minEvictableIdleTimeMillis，则关闭当前连接。
jdbc.minEvictableIdleTimeMillis = 300000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、 testWhileIdle都不会其作用。在mysql中通常为select 'x'，在oracle中通常为select 1 from dual
jdbc.validationQuery = SELECT 'x'
#  建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
jdbc.testWhileIdle = true
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
jdbc.testOnBorrow = false
#指明是否在归还到池中前进行检验
jdbc.testOnReturn = false
#  statement池能够同时分配的打开的statements的最大数量, 如果设置为0表示不限制
jdbc.maxOpenPreparedStatements = 20
#标记是否删除泄露的连接,如果他们超过了removeAbandonedTimout的限制.如果设置为true, 连接被认为是被泄露并且可以被删除,如果空闲时间超过removeAbandonedTimeout. 设置为true可以为写法糟糕的没有关闭连接的程序修复数据库连接
jdbc.removeAbandoned = true
#泄露的连接可以被删除的超时值, 单位秒
jdbc.removeAbandonedTimeout = 1800
#  标记当Statement或连接被泄露时是否打印程序的stack traces日志。被泄露的Statements和连接的日志添加在每个连接打开或者生成新的Statement,因为需要生成stack trace。
jdbc.logAbandoned = true
#驱动名
jdbcdriver = com.oscar.Driver
#URL
jdbcurl = jdbc:oscar://127.0.0.1:2003/OSRDB;charset=ZHS16GBK
#用户名
jdbcusername = platform
#密码
jdbcpassword = platform